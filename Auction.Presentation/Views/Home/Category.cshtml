@model Auction.Presentation.Models.ProductsWithBidViewModel
@using Auction.Presentation.Models;
@using Auction.Presentation.Infrastructure.Authentication;
@using Auction.Presentation.Helpers;


@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="ui four column grid">
    @foreach (var product in Model.Products)
    {
        var bidVM = Model.Bids.FirstOrDefault(b => b != null && b.ProductId.Equals(product.Id));
        ProfileViewModel user = null;
        if (bidVM != null)
        {
            user = Model.Users.FirstOrDefault(u => u.Id == bidVM.UserId);
        }

        <div class="column">
            <div class="ui card" id="@product.Id">
                    <img src="@Url.Action("RenderImageProduct", "Image", new { id = product.Id })" />
                    <a class="header" href="#">@product.Name</a>               
                    <div class="meta">
                        <a>@product.Description</a>
                    </div>
                    <div class="clock">@product.Duration</div>
                    @if (bidVM == null)
                    {
                        <div class="coursive ui red price">Not Bid yet</div>
                    }
                    else {
                        <div class="coursive ui red price"><b>Now:</b> @bidVM.Price</div>
                    }
                    @if (user == null)
                    {
                        <div class="coursive ui red username">Nobody</div>
                    }
                    else {
                        <div class="coursive ui red username">@user.FirstName</div>
                    }
            </div>
            <a class="ui bottom attached button basic red @product.Id" >
                <i class="add icon"></i>
                PLACE BID
            </a>
        </div>



        <div class="ui modal @product.Id productsModal" id="@product.Id">
            <i class="close icon"></i>
            <div class="header">
                @product.Name
            </div>
            <div class="ui grid">
                <div class="ui medium image six wide column">
                    <img src="@Url.Action("RenderImageProduct", "Image", new { id = product.Id })">
                </div>
                <div class="description eight wide column">
                    <div class="ui header"></div>
                    <div class="ui labeled input">
                        <div class="ui label">
                            @Html.LabelFor(model => model.Products.First().Description):
                        </div>
                        <span class="coursive">@product.Description</span>
                    </div>
                    @if (User != null && User.Identity.IsAuthenticated)
                    {
                        var claimsIdentity = User.Identity as System.Security.Claims.ClaimsIdentity;
                        var claimTimeZone = claimsIdentity.FindFirst(ClaimService.ClaimsType["timezone"]).Value;
                        TimeSpan offset = TimeZoneHelper.ConverTimeToServer(claimTimeZone);
                        product.StartDate = product.StartDate.Add(offset);
                    }
                    <div class="ui labeled input">                      
                            <div class="ui label">
                                @Html.LabelFor(model => Model.Bids.FirstOrDefault().Price)
                            </div>
                        @if (bidVM != null)
                        {
                            <span class="coursive ui red price"><b>Now:</b> @bidVM.Price</span>
                        }
                        else
                        {
                            <span class="coursive ui red price"><b>Now:</b> Not Bid yet</span>
                        }
                    </div>
                    <div class="ui labeled input">
                        <div class="ui label">
                            @Html.LabelFor(model => Model.Users.FirstOrDefault().FirstName)
                        </div>
                        @if (user == null)
                        {
                            <span class="coursive ui red username">Nobody</span>
                        }
                        else
                        {
                            <span class="coursive ui red username">@user.FirstName</span>
                        }
                    </div>
                    <div class="ui labeled input">
                        <div class="ui label">
                            @Html.LabelFor(model => model.Products.First().StartDate):
                        </div>
                        <span class="coursive">@product.StartDate</span>
                    </div>

                    <div class="ui labeled input">
                        <div class="ui label">
                            @Html.LabelFor(model => bidVM.Price):
                        </div>                        
                        @{
                            int nextStep = ViewBag.BidStep;
                            if (bidVM != null)
                            {
                                nextStep += bidVM.Price;
                            }
                            else
                            {
                                nextStep += product.StartPrice;
                            }
                         }
                        <input type="text" id="bidVM_Price" name="bidVM.Price"  placeholder='bid high or equal: @nextStep' value="" />      
                </div>


<button id="@product.Id" class="pushBid ui button basic blue @product.Id">Place Bid</button>                                                
                </div>
            </div>
            <div class="actions">
                <div class="ui black deny button" id="@product.Id">
                    Out
                </div>
                <div class="ui positive right icon button" id="@product.Id">
                    Full information
                    <i class="checkmark icon"></i>
                </div>
            </div>
        </div>
    }
</div>



@if (User != null && User.Identity.IsAuthenticated)
{
    var claimsIdentity = User.Identity as System.Security.Claims.ClaimsIdentity;
    var claimId = claimsIdentity.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value;
    <input id="userId" type="hidden" value="@claimId">
}


<script>
    var products = @Auction.Presentation.Helpers.JsonSerialize.SerializeObject(Model.Products),
        bidUrl = @Auction.Presentation.Helpers.JsonSerialize.SerializeObject(@Url.Action("Create", "Bid"));
</script>

@section Scripts {
@Scripts.Render("~/Scripts/flipclock.min.js")
    @Scripts.Render("~/Scripts/app.js?v7")
}